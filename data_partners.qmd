---
title: "Bank Partnerships"
format: 
   html:
     df-print: paged
---

## Exploring Partnership Events {#sec-partners}

```{r}
#| warning: false
#| echo: false
source('functions.R')
target_label <- credit_card.target_label()
``` 

Using three partnership events as case studies, we can visualise *`r target_label`* to see if we can observe any changes around the partnership event. There are two dates of interest; the official date of acquisition and the date when cards become available for use. For example, Barclays's acquisition of GAP Inc. was on May 1, 2022 but it wasn't until June 20, 2022 that the old Synchrony borrowers could use their new Barclays partnership cards.

As mentioned in @sec-intro-events we may not noticeably see the impact of a partnership event if it is not material to one or both of the Banks involved. To get a sense of the magnitude of the event we can look at the measures: *Loans to Individuals..Credit Cards* (UBPRB538) and *Unused commitments on Credit Cards* (UBPR3815). These measures tell us if borrowers utilise their partnership card; a new partnership that brings in a substantial number of new borrowers may not impact delinquency if the borrowers are not using the partnership card. 

```{r}
#| warning: false
#| output: false
#| eval: false

apply_bank_filters = TRUE
apply_reg_filter = TRUE

overdue30to89 <- credit_card.overdue_3089(apply_bank_filters, apply_reg_filter)
loan_amt <-  credit_card.loan_amount(apply_bank_filters, apply_reg_filter)
loan_unused <- credit_card.unused(apply_bank_filters, apply_reg_filter)
loan_amt_pct_change <- loan_amt |> group_by(BankName) |> mutate(pct_change = value_diff/lag(Value) *100) 
loan_unused_pct_change <- loan_unused |> group_by(BankName) |> mutate(pct_change = value_diff/lag(Value) *100) 

partner_data <- credit_card.partnerships() 

partner_data |> pmap(partnership.plot,overdue30to89, "Value", "median")
partner_data |> pmap(partnership.plot,overdue30to89, "value_diff", "median")
partner_data |> pmap(partnership.plot,bind_rows(loan_amt,loan_unused), "Value", "median")
partner_data |> pmap(partnership.plot,bind_rows(loan_amt_pct_change,loan_unused_pct_change), "pct_change", "median")

```


::: {#fig-3089days .panel-tabset}

## Gap

![`r target_label`](images/GAP_UBPRE524_Value_median_partnership.png){#fig-gap-val}

![`r target_label` quarterly difference](images/GAP_UBPRE524_value_diff_median_partnership.png){#fig-gap-diff}

::: {#fig-magitude-gap .panel-tabset}

## Magnitude Measures - Value

![Magnitude Measures](images/GAP_UBPR3815_UBPRB538_Value_median_partnership.png){#fig-gap-val-mag}

## Magnitude Measures - Percentage Change
![Magnitude Measures](images/GAP_UBPR3815_UBPRB538_pct_change_median_partnership.png){#fig-gap-pct-mag}

:::

source: [@gap2021; and @gap2022]

## Costco

![`r target_label`](images/Costco_UBPRE524_Value_median_partnership.png){#fig-Costco-val}

![`r target_label` quarterly difference](images/Costco_UBPRE524_value_diff_median_partnership.png){#fig-Costco-diff}

::: {#fig-magitude-Costco .panel-tabset}

## Magnitude Measures - Value

![Magnitude Measures](images/Costco_UBPR3815_UBPRB538_Value_median_partnership.png){#fig-Costco-val-mag}

## Magnitude Measures - Percentage Change

![Magnitude Measures](images/Costco_UBPR3815_UBPRB538_pct_change_median_partnership.png){#fig-Costco-pct-mag}

:::

source: [@costco2016]

## Walmart
![`r target_label`](images/Walmart_UBPRE524_Value_median_partnership.png){#fig-walmart-val}

![`r target_label` quarterly difference](images/Walmart_UBPRE524_value_diff_median_partnership.png){#fig-Costco-diff}

::: {#fig-magitude-walmart .panel-tabset}

## Magnitude Measures - Value

![Magnitude Measures](images/Walmart_UBPR3815_UBPRB538_Value_median_partnership.png){#fig-walmart-val-mag}

## Magnitude Measures - Percentage Change

![Magnitude Measures](images/Walmart_UBPR3815_UBPRB538_pct_change_median_partnership.png){#fig-walmart-pct-mag}

:::
source: [@walmart2018; and @walmart2019]
:::

## Disambiguating Trend vs. Event  {#sec-trend-event}

Depending on the relative quality of the partnership portfolio we may see `r target_label` remain: 

* Stable
* Both portfolios improve / degrade
* One improves the other degrades.

For the GAP and Costco partnerships we can see that the portfolio quality degrades i.e. *`r target_label`* shows increased delinquency, in both the *old* and *new* bank during the transitional period (between acquisition and card availability). This may suggest the partnership portfolio has added riskier borrowers relative to the *new* bank's existing portfolio and removed less risky borrowers relative to the *old* bank's remaining portfolio. However, this assertion is questionable as the increase we are seeing may just be the trend, shown in grey (calculated as the median across all peer Banks), which also increased during this period. 

Another factor, as we saw in @fig-lfeature-6, was a tendency for short term reversal, or a reversion to a mean. This may be a factor of banks enacting policies to keep delinquency within their risk tolerance levels. Consequently, where we see an increase after a decrease it may be due in part to this data characteristic.

We will look to model the partnership impact by accounting for trend.

## Magnitude measures

Anecdotal accounts indicate that a spike in Unused commitments before the *acquisition* date could be due to borrowers paying down their cards, and even closing them, to mitigate concerns around the transition [@redditBarc]. The borrowers who can pay down their loans are likely low-risk, which may result in the portfolio, at the time of the partnership event, looking more risky than it really is (given *`r target_label`* is a proportion of the credit card loans). 

Increases in credit card loans in the *old* bank, as seen in GAP and Walmart, is unexpected. An assumption is that these banks marketed alternative cards to keep borrowers.   

## Additional information on partnerships

Given our goal to generalise partnership impacts by FICO and/or Industry we need to use additional public data sources to provide this mapping. 

### FICO Score
The *Terms of credit card plans (TCCP) survey* [@TCCP2022] provides credit card details including their target FICO Tiers and Annual Percentage Rate (APR). @boston2000 found that banks faced an adverse selection problem whereby it was profitable to offer credit card deals with high APR that attracted risker borrowers even though there was evidence of higher delinquency. We can see from TCCP's 2022 survey in @tbl-tccp-apr that the APR does not differ between partnership and bank branded cards.


[TCCP data download](data/cfpb_tccp-data_2022-07-01_2022_12-31.xlsx)

```{r}
#| warning: false
#| label: tbl-tccp
#| tbl-cap: "Subset of TCCP survey (2022)"

tccp <- readxl::read_excel("data/cfpb_tccp-data_2022-07-01_2022_12-31.xlsx", skip=9) |>
filter(`Availability of Credit Card Plan` == "National") |> 
dplyr::select(`Product Name`, Partner, `Institution Name`, `Targeted Credit Tiers`,
Services,`Other Services`,Rewards,`Other Rewards`,`Website for Consumer`, MaxAPR = `Maximum APR...38`) 

tccp |> filter(grepl("Walmart|GAP|Apple|Costco|Wayfair|Old Navy|GP", `Product Name`, ignore.case = TRUE)) 

```

```{r}
#| warning: false
#| label: tbl-tccp-apr
#| tbl-cap: "Median summary APR for partnership cards vs. bank branded cards"

peer_df <- dplyr::bind_rows(
            readr::read_delim("data/CDR-UBPR_RT6_PEERGROUP_201_2023_12_31.txt", skip=5,show_col_types = FALSE) |> tibble::add_column(BankType = "LargeCreditCardBank"),
            readr::read_delim("data/CDR-UBPR_RT6_PEERGROUP_1_2023_12_31.txt", skip=5,show_col_types = FALSE) |> tibble::add_column(BankType = "LargeBank")
            ) |> mutate(Name = trimws(Name)) 

tccp <- readxl::read_xlsx("data/cfpb_tccp-data_2022-07-01_2022_12-31.xlsx", skip = 9) |> mutate(BankName = trimws(`Institution Name`)) |> relocate(BankName) |>
    mutate(BankName = case_when(
                  BankName == "SYNCHRONY FINANCIAL" ~ "SYNCHRONY BANK",
                  BankName == "MERRICK BANK CORPORATION" ~ "MERRICK BANK",
                  BankName == "PNC Bank N.A." ~ "PNC BANK, NATIONAL ASSOCIATION",              
                  BankName == "BMO HARRIS BANK NATIONAL ASSOCIATION" ~  "BMO BANK NATIONAL ASSOCIATION",   
                  .default = BankName
            )) |>
  mutate(across(where(is.double), ~na_if(., 9.99))) |> rowwise() |>
  mutate(MaxAPR=max(across(contains("Maximum APR")), na.rm = TRUE),
        MedianAPR=max(across(contains("Median APR")), na.rm = TRUE),
        MinAPR=max(across(contains("Mimimum APR")), na.rm = TRUE))
              
final_tccp <- peer_df |> left_join(tccp, by = join_by(Name == BankName)) |> 
                mutate(BankName = paste0(Name, " (", `ID RSSD`, ")") ) |> 
                    relocate(BankName) |> 
                    rename(TargetTiers = `Targeted Credit Tiers`) |>
                        separate_wider_delim(TargetTiers," ",names = "LowestTier", too_many = "drop") 

tccp_maxapr <- final_tccp |> 
                mutate(MaxAPR=coalesce(MaxAPR, MedianAPR, MinAPR)) |> relocate(MaxAPR) |> group_by(BankName,BankType, Partner, LowestTier) |> 
                summarise(MaxAPR = mean(MaxAPR,na.rm=TRUE)) |>
                drop_na(Partner) |>
                mutate(Partner = if_else(Partner == 1 , "Yes", "No"),MaxAPR = MaxAPR*100)
   
tccp_maxapr |> 
  group_by(BankType, Partner) |> 
  summarise(MaxAPR = mean(MaxAPR, na.rm=TRUE)) |> 
  dplyr::select(`Partnership card` = Partner, `Max APR (%)` = MaxAPR)

```

```{r}
#| warning: false
#| label: fig-tccp-apr
#| fig-cap: "Max APR distribution for partnership cards vs. bank branded cards"
tccp_maxapr |> 
  mutate(Partner = if_else(Partner == "Yes" , "Partnership", "Bank-branded")) |>
  ggplot(aes(x=MaxAPR, colour = Partner))+ 
    geom_density() +
    labs(x="Max APR") + theme_bw() +
    theme(legend.position="top",legend.title=element_blank())
```

### Industry Classification

The US uses the *North American Industry Classification System (NAICS)* [@naics] which we will utilise at the granularity that provides some grouping. For our use cases NAICS hierarchy level 5 looks promising.

```{r}
read_csv("data/Partner_NAICS.csv",show_col_types = FALSE)|>
                rmarkdown::paged_table()  
```