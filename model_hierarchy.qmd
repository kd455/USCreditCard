---
title: "Event study"
format: html
---
$$
Y_{it} = \alpha + \beta X_{it} + \gamma D_{it} + \mu_i + \epsilon_{it}
$$
In this representation:

$Y_{it}$ is the dependent variable for entity $i$ at time $t$.
$X_{it}$ represents the independent variable(s) for entity $i$ at time $t$.
$D_{it}$ is the dummy variable for the event (1 after the event, 0 before).
$\alpha$ is the constant term.
$\beta$ is the coefficient for the independent variable(s).
$\gamma$ is the coefficient for the dummy variable.
$\mu_i$ represents the entity-specific fixed effect.
$\epsilon_{it}$ is the error term.

The coefficient $\gamma$ on the dummy variable indicates the average change in the target variable associated with the event, controlling for other factors.

By including this dummy variable, you can directly estimate the impact of the event on the intercept (baseline level) of the dependent variable

```{r}
#| warning: false
#| echo: false
source('functions.R')
hier_data <- get_hierarchy_model_data() |> drop_na(UBPRE524.diff.lag4) |> 
        mutate(BankType = as.factor(BankType),
         IDRSSD = as.factor(IDRSSD),
         BankName = as.factor(BankName),
         Partner= as.factor(Partner),
         HasPartner = as.factor(HasPartner),
         Qtr = as.factor(quarter(Quarter)),
         NAICS2 = as.factor(stringr::str_sub(NAICS,start=1, end=2)),
         NAICS3 = as.factor(stringr::str_sub(NAICS,start=1, end=3)))

# market_formula <- "UBPRE524.diff ~ UBPRE524.group.log.diff"
# all_data <- get_model_data()
# market_residuals <- all_data$all_data |>fill_gaps() |> 
#                         model(tslm = TSLM(as.formula(market_formula))) |> 
#                             augment() |> dplyr::select(.resid)

# final_data <- hier_data |> left_join(market_residuals,by = join_by(BankName, Quarter, IDRSSD, BankType))

m1 <- lmer(UBPRE524.diff ~ HasPartner + (1 + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + RRSFS.Pop.log.diff + UNRATE.log.diff + UNRATE.log.diff.lag1, data = hier_data, REML = FALSE)

m2 <- lmer(UBPRE524.diff ~ HasPartner + (1 + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1, data = hier_data, REML = FALSE)

m3 <- lmer(UBPRE524.diff ~ HasPartner + (1 + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m4 <- lmer(UBPRE524.diff ~ HasPartner + (1 + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m5 <- lmer(UBPRE524.diff ~ HasPartner + (1 + HasPartner + UBPR3815.log.diff | Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m6 <- lmer(UBPRE524.diff ~ HasPartner +  (1 + Qtr + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m7 <- lmer(UBPRE524.diff ~ HasPartner +  (1 + HasPartner + Qtr:BankType + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m8 <- lmer(UBPRE524.diff ~ HasPartner +  (1 + HasPartner + Qtr + UBPRB538.log.diff + UBPR3815.log.diff | BankType/BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m9 <- lmer(UBPRE524.diff ~ HasPartner +  (1 + HasPartner + Qtr + UBPR3815.log.diff | BankName/Partner) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

m6.1 <- lmer(UBPRE524.diff ~ HasPartner +  (1 + Qtr + HasPartner + UBPRB538.log.diff + UBPR3815.log.diff | BankName/NAICS2) + TDSP.log.diff + TDSP.log.diff.lag1 + UBPRE524.group.log.diff, data = hier_data, REML = FALSE)

model_compare <- model.sel( m1,m2,m3,m4,m5, m6,m7,m8,m9,m6.1,rank = "AICc")

model_compare |> as.data.frame() |> rownames_to_column(var = "Model")|> 
    mutate(across(where(is.numeric), \(x) round(x,2))) |> 
        relocate(df:weight, .after = Model) |>
            dplyr::select(Model, df, logLik, AICc, delta, weight) |>
                rmarkdown::paged_table()  

m <- lmer(formula(m6), data = hier_data, REML = TRUE)
summary(m)
coef(m)

m_naics <- lmer(formula(m6.1), data = hier_data, REML = TRUE)
summary(m_naics)
coef(m_naics)


