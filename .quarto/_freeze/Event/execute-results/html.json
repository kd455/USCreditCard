{
  "hash": "b097eb663fb67985ce67dc5731784a17",
  "result": {
    "markdown": "---\ntitle: \"Event study\"\nformat: html\n---\n\n\nEvent studies are a common approach in econometrics to assess the impact of an event such as earnings announcements, mergers and acquisitions, regulatory changes, or macroeconomic news.\n\nThe goal is to estimate the portion of post-event change that can be attributed to the event itself, isolating it from other market and firm-specific effects. We do this by predicting what would have happened if the event had not occurred (the counterfactual) and comparing it to the actual observed data to estimate the resulting \"abnormal returns\".\n\n## Evaluation\n\nThe joint test problem arises because we are effectively testing two things: the counterfactual model and the event impact. Consequently, we need an approach to accurately evaluate if our counterfactual model results are credible. One approach is to test using observations where we expect no effect; if there were resulting \"abnormal returns\" this would point to an issue with the model [see @HuntingtonKlein, chap 17.3.3]. \n\n\n$$\nOutcome = \\beta_0 + \\beta_1t + \\beta_2After + \\beta_3t\\times After+\\varepsilon\n$$\nwhere $t$ is the time period and $After$ is a binary variable equal to 1 in any time after the event\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource('functions.R')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'forcats' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'fable' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: fabletools\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'fabletools' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'feasts' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tsibble' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'arrow' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'arrow'\n\nThe following object is masked from 'package:lubridate':\n\n    duration\n\nThe following object is masked from 'package:utils':\n\n    timestamp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'memoise' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggrepel' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggtext' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'prophet' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Rcpp\nLoading required package: rlang\n\nAttaching package: 'rlang'\n\nThe following object is masked from 'package:arrow':\n\n    string\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidymodels' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'broom' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dials' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'scales' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'infer' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'modeldata' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'parsnip' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'recipes' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rsample' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tune' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'workflows' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'workflowsets' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'yardstick' was built under R version 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ rlang::%@%()          masks purrr::%@%()\n✖ yardstick::accuracy() masks fabletools::accuracy()\n✖ scales::discard()     masks purrr::discard()\n✖ dplyr::filter()       masks stats::filter()\n✖ recipes::fixed()      masks stringr::fixed()\n✖ rlang::flatten()      masks purrr::flatten()\n✖ rlang::flatten_chr()  masks purrr::flatten_chr()\n✖ rlang::flatten_dbl()  masks purrr::flatten_dbl()\n✖ rlang::flatten_int()  masks purrr::flatten_int()\n✖ rlang::flatten_lgl()  masks purrr::flatten_lgl()\n✖ rlang::flatten_raw()  masks purrr::flatten_raw()\n✖ infer::generate()     masks fabletools::generate()\n✖ infer::hypothesize()  masks fabletools::hypothesize()\n✖ rlang::invoke()       masks purrr::invoke()\n✖ dplyr::lag()          masks stats::lag()\n✖ parsnip::null_model() masks fabletools::null_model()\n✖ rsample::populate()   masks Rcpp::populate()\n✖ yardstick::spec()     masks readr::spec()\n✖ rlang::splice()       masks purrr::splice()\n✖ recipes::step()       masks stats::step()\n✖ rlang::string()       masks arrow::string()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n:::\n\n```{.r .cell-code}\npartner_data <- credit_card.partnerships()\noverdue30to89 <- credit_card.overdue_3089()\nloan_amt <-  credit_card.loan_amount()\nloan_unused <- credit_card.unused()\nloan_unused_ratio <- credit_card.unused_ratio()\npartner_data <- credit_card.partnerships() \n\nselected_measure <- overdue30to89\n\npartners <- partner_data |> \n                    select(-caption) |>\n                    pivot_longer(cols = c('old','new'), names_to = \"partnership\", values_to = \"BankName\") |> \n                    filter(partnership %in% c('new','old')) |>\n                    mutate(across(c(\"acquired\", \"available\"), lubridate::ymd))\n\nagg_data <- aggregate_by_index(selected_measure, \"value_diff\") |> \n                rename(value_diff.Agg = value_diff) \n\nbank_data <- partners |> \n                left_join(selected_measure, relationship = \"many-to-many\") |>\n                rename(value_diff.Bank = value_diff) |>\n                left_join(agg_data) |>\n                mutate(Period = Quarter - yearquarter(acquired)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(BankName)`\nJoining with `by = join_by(Measure, Description, Quarter)`\n```\n:::\n\n```{.r .cell-code}\n# Estimate a model \n#m <- lm(value_diff.Bank  ~ value_diff.Agg + partnership, data = est_data)\n# Estimate And observation data\nest_data <- bank_data |> filter(between(Period, -6, -1))\nobs_data <- bank_data |> filter(between(Period, 0, 5)) \n\nm_recipe <- recipe(bank_data) |>\n  update_role(everything(), new_role = \"support\") |> \n  update_role(value_diff.Bank, new_role = \"outcome\") |>\n  update_role(value_diff.Agg, partnership, new_role = \"predictor\") |>\n  step_dummy(partnership, one_hot=T)\n\n# obs_data <- m_recipe |>\n#             prep(obs_data) |>\n#             bake(obs_data)\n\nm_model <- linear_reg() |> set_engine(\"lm\")\n\nm_workflow <- workflow() |>\n                add_recipe(m_recipe) |>\n                add_model(m_model)\n\nm_fitted <- m_workflow |> fit(est_data)\n\ny_hat <- m_fitted |> predict(obs_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\", : prediction from rank-deficient fit; consider predict(.,\nrankdeficient=\"NA\")\n```\n:::\n\n```{.r .cell-code}\n  #metric_set(rmse, mae, rsq)(obs_data$value_diff.Bank, .pred)\n\n\n#https://mdneuzerling.com/post/machine-learning-pipelines-with-tidymodels-and-targets/\n#In the observation period, subtract the prediction from the actual return to get the “abnormal return.” \nobs_data_ar <- bind_cols(obs_data, y_hat) |>\n    # Using mean of estimation return\n    mutate(\n        #mean = value_diff.Bank - mean(est_data$value_diff.Bank),\n        # Then comparing to peers\n        #peers = value_diff.Bank - value_diff.Agg,\n        # Then using model fit with estimation data\n        Predicted = .pred,\n        \"Actual-Predicted\" = value_diff.Bank - .pred)\n\n#put predictions and predictions together for visualisation\nactual <- bank_data |> \n    filter(between(Period, -6, 5)) |> \n    select(Period, partner_event = name, BankName, partnership, Actual=value_diff.Bank) \n   \npredict <- obs_data_ar |> \n    select(Period, partner_event = name, BankName, partnership, Predicted) \n    \nactual |> left_join(predict) |>\nas_tsibble(index=Period, key=c(partner_event, BankName)) |>\npivot_longer(cols=c(Actual,Predicted), names_to = \"Values\") |> \n    autoplot(value,aes(color = Values)) + facet_grid(partnership ~ partner_event) +\n    theme(legend.position = \"top\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(Period, partner_event, BankName, partnership)`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](event_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n##Evaluating the model\nhttps://theeffectbook.net/ch-EventStudies.html\nThe idea is this: when there’s supposed to be an effect, and we test for an effect, we can’t tease apart what part of our findings is the effect, and what part is the counterfactual model being wrong. But what if we knew there were no effect? Then, anything we estimated could only be the counterfactual model being wrong. So if we got an effect under those conditions, we’d know our model was fishy and would have to try something else.\n\nSo, get a bunch of different time series to test, especially those unaffected by the event. In the context of stock returns, for example, don’t just include the firm with the great announcement on a certain day, also include stocks for a bunch of other firms that had no announcement.\n\nThen, start doing your event study over and over again. Except each time you do it, pick a random time series to do it on, and pick a random day when the “event” is supposed to have happened.21\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_measure |>\n    as_tibble() |>\n    filter(LargeBank==1|LargeCreditCardBank==1) |>\n    left_join(partners, relationship = \"many-to-many\") |>\n    rename(value_diff.Bank = value_diff) |>\n    mutate(Period = Quarter - yearquarter(acquired)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(BankName)`\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,994 × 17\n    IDRSSD BankName          Measure Label Description Value LargeBank OtherBank\n     <int> <chr>             <chr>   <chr> <chr>       <dbl>     <int>     <int>\n 1 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  1.05         1         0\n 2 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  1.35         1         0\n 3 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  1.47         1         0\n 4 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  2.1          1         0\n 5 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  2.38         1         0\n 6 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  2.38         1         0\n 7 3284070 ALLY BANK (32840… UBPRE5… LN_C… Credit Car…  2.79         1         0\n 8 1394676 AMERICAN EXPRESS… UBPRE5… LN_C… Credit Car…  1.74         0         1\n 9 1394676 AMERICAN EXPRESS… UBPRE5… LN_C… Credit Car…  1.93         0         1\n10 1394676 AMERICAN EXPRESS… UBPRE5… LN_C… Credit Car…  1.6          0         1\n# ℹ 1,984 more rows\n# ℹ 9 more variables: LargeCreditCardBank <int>, Quarter <qtr>,\n#   value_scaled <dbl[,1]>, value_diff.Bank <dbl>, name <chr>, acquired <date>,\n#   available <date>, partnership <chr>, Period <dbl>\n```\n:::\n:::",
    "supporting": [
      "event_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}