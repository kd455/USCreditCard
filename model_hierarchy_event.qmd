---
title: "Hierarchical Model"
format: html
---

```{r}
#| warning: false
#| echo: false
source('functions.R')
```
The ARIMA models treat each series in isolation, capturing series-specific dynamics without considering potential cross-series information. The hierarchical model, on the other hand, leverages the entire dataset to estimate both global parameters (common to all series) and series-specific parameters, potentially offering a richer, more nuanced understanding of the data

while a hierarchical model can provide insights into the shared dynamics across series and how individual firms deviate from this common pattern

```{r}
#| warning: false
model_data <- get_model_data()
all_data <- model_data$all_data
estimation_data <- model_data$estimation_data
observation_data <- model_data$observation_data
partner_banks <- credit_card.partnerships.long()
target_label <- credit_card.target_label()
```

```{r}
#| warning: false
#| code-fold: false
#| eval: true
m1 <- lmer(UBPRE524.diff ~ (1 | BankType/BankName), data = estimation_data, REML = FALSE)
m2 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName)+ UNRATE.log.diff + UNRATE.log.diff.lag1 + UNRATE.log.diff.lag2  , data = estimation_data, REML = FALSE)
m3 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName)+ RRSFS.Pop.log.diff + RRSFS.Pop.log.diff.lag1 + RRSFS.Pop.log.diff.lag2 , data = estimation_data, REML = FALSE)
m4 <- lmer(UBPRE524.diff ~ (1 +UBPRB538.log.diff | BankType/BankName) + RRSFS.Pop.log.diff + TDSP.log.diff + B069RC1.Pop.CPI.log.diff.lag1 , data = estimation_data, REML = FALSE)
m5 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + RRSFS.Pop.log.diff + TDSP.log.diff + RRSFS.Pop.log.diff.lag1 , data = estimation_data, REML = FALSE)
m6 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + RRSFS.Pop.log.diff + UNRATE.log.diff + UNRATE.log.diff.lag1 , data = estimation_data, REML = FALSE)
m7 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + TDSP.log.diff + TDSP.log.diff.lag1 + TDSP.log.diff.lag2 , data = estimation_data, REML = FALSE)
m8 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + UBPRE524.all.log.diff + UBPRE524.group.log.diff,data = estimation_data, REML = FALSE)

m8 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + UBPRE524.all.log.diff + UBPRE524.group.log.diff,data = estimation_data, REML = FALSE)
m8.1 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + UBPRE524.all.log.diff + UBPRE524.group.log.diff + TDSP.log.diff.lag1 + TDSP.log.diff.lag2 ,data = estimation_data, REML = FALSE)
m8.2 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + UBPRE524.all.log.diff + UBPRE524.group.log.diff + RRSFS.Pop.log.diff + UNRATE.log.diff + UNRATE.log.diff.lag1,data = estimation_data, REML = FALSE)
m8.3 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff | BankType/BankName) + UBPRE524.group.log.diff+ TDSP.log.diff + TDSP.log.diff.lag1 + TDSP.log.diff.lag2 ,data = estimation_data, REML = FALSE)
m8.4 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff + UBPR3815.log.diff | BankType/BankName) + UBPRE524.all.log.diff + UBPRE524.group.log.diff + TDSP.log.diff.lag1 + TDSP.log.diff.lag2 ,data = estimation_data, REML = FALSE)
m8.5 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff + UBPR3815.log.diff | BankType/BankName) + UBPRE524.group.log.diff + TDSP.log.diff + TDSP.log.diff.lag1 ,data = estimation_data, REML = FALSE)
m8.6 <-  lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff.lag3 + UBPR3815.log.diff | BankType/BankName) + UBPRE524.group.log.diff + TDSP.log.diff.lag1 + TDSP.log.diff.lag2 + Qtr ,data = estimation_data, REML = FALSE)
m8.7 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Qtr) + UBPRE524.group.log.diff + TDSP.log.diff + TDSP.log.diff.lag1, data = estimation_data, REML = FALSE)
m8.8 <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff + UBPR3815.log.diff | BankName/Qtr) + UBPRE524.group.log.diff + UBPRE524.all.log.diff + TDSP.log.diff + TDSP.log.diff.lag1, data = estimation_data, REML = FALSE)

#https://statisticalhorizons.com/lagged-dependent-variables/
```
```{r}
#| warning: false
#| label: tbl-hier-aicc
#| tbl-cap: AICc Summary. The lower the AICc value, the better the balance between model complexity (number of parameters) and goodness of fit
model_comparison <- model.sel( m1, m2, m3, m4, m5, m6, m7, m8, rank = "AICc")

model_comparison |> as.data.frame() |> rownames_to_column(var = "Model")|> 
    mutate(across(where(is.numeric), \(x) round(x,2))) |> 
        relocate(df:weight, .after = Model) |>
         dplyr::select(Model, df, logLik, AICc, delta, weight) |>
            rmarkdown::paged_table()  

m8.9  <- lmer(UBPRE524.diff ~ (1 + UBPRB538.log.diff + UBPR3815.log.diff + UBPRE524.log.diff.lag1 | BankName/Qtr) + UBPRE524.group.log.diff + TDSP.log.diff + TDSP.log.diff.lag1, data = estimation_data, REML = TRUE)

```


```{r}
#| warning: false
#| label: tbl-hier2-aicc
#| tbl-cap: AICc Summary - refinement of model selection. 
model_comparison <- model.sel( m8, m8.1, m8.2, m8.3, m8.4, m8.5, m8.6, m8.7, m8.8, rank = "AICc")

model_comparison |> as.data.frame() |> rownames_to_column(var = "Model")|> 
    mutate(across(where(is.numeric), \(x) round(x,2))) |> 
        relocate(df:weight, .after = Model) |>
            dplyr::select(Model, df, logLik, AICc, delta, weight) |>
                rmarkdown::paged_table()  

```
Set REML to true. 

```{r}
#| warning: false
#| label: fig-plot-fit-hier
#| fig-cap: "Fitted vs. Observed for estimation data on sub-set of firms"
#| fig-height: 10
top_model <- m8.8
model_name <- "m8.8"
augmented_data <- augment(top_model) |> 
                    mutate(Quarter = estimation_data$Quarter,
                        BankType = estimation_data$BankType) |>
                    add_column(.model = model_name) |>
                    as_tsibble(index = Quarter, key = c(BankName, BankType)) 

augmented_data |> 
    filter(BankName %in% unique(observation_data$BankName)) |>
    plot_model_fit("UBPRE524.diff")

```
```{r}
#| warning: false
#| label: tbl-coef-hier
#| tbl-cap: "Intercept and coefficients"
#| tbl-subcap:
#|  - "Fixed Effects"
#|  - "Correlation of Fixed Effects"
#|  - " Plot the simulated fixed effects"
tidy(top_model, effects = "fixed") |>
    mutate(across(where(is.numeric), \(x) round(x,2))) |>  
    dplyr::select(-effect) |>
    rmarkdown::paged_table() 

cov2cor(vcov(top_model)) |> as.matrix() |> as.data.frame() |>
    mutate(across(where(is.numeric), \(x) round(x,2))) |>  
    rmarkdown::paged_table() 

feEx <- FEsim(top_model, 1000)
plotFEsim(feEx) +
  theme_bw() + labs(title = "Coefficient Plot",
                    x = "Median Effect Estimate", y = glue("{target_label} (difference)"))

```

::: {#fig-random-effects .panel-tabset}

## Random Effects Plot
```{r}
#| warning: false
#| results: hide
#| fig-keep: all
#| label: fig-random-effect
#| fig-cap: "Random Effects"
reEx <- REsim(top_model)
plotREsim(reEx)      
```

## Random Effects Data
```{r}
#| warning: false
#| label: tbl-coef-random
#| tbl-cap: "Intercept and coefficients"
#| tbl-subcap:
#|  - "Random Effects for Qtr"
#|  - "Random Effects for BankName:Qtr (selected Banks)"
ranef(top_model, condVar = TRUE)$Qtr |>
     mutate(across(where(is.numeric), \(x) round(x,2))) |>  
        rmarkdown::paged_table()

selected_banks <- unique(paste0(observation_data$Qtr, ":", observation_data$BankName))
ranef(top_model, condVar = FALSE)$`Qtr:BankName` |> as.data.frame() |> 
    rownames_to_column(var = "Qtr:BankName") |> 
    filter(`Qtr:BankName` %in% selected_banks) |>
    mutate(across(where(is.numeric), \(x) round(x,2))) |>  
        rmarkdown::paged_table()
```
:::


### Residual diagnostics {#sec-residual-check-hier}

::: {#fig-hier-checks .panel-tabset}

### CITIBANK
```{r}
#| warning: false
#| label: fig-res-citi-hier
#| fig-cap: "hier residuals"
bank <- "CITIBANK"
plot_bank_residual(bank, augmented_data)

```

### SYNCHRONY
```{r}
#| warning: false
#| label: fig-res-sync-hier
#| fig-cap: "Best Bank Model residuals"
bank <- "SYNCHRONY"
plot_bank_residual(bank, augmented_data)
```

### BARCLAYS
```{r}
#| warning: false
#| label: fig-res-bar-hier
#| fig-cap: "Model residuals"
bank <- "BARCLAYS"
plot_bank_residual(bank, augmented_data)
```

### AMERICAN EXPRESS
```{r}
#| warning: false
#| label: fig-res-ae-hier
#| fig-cap: "Model residuals"
bank <- "AMERICAN EXPRESS"
plot_bank_residual(bank, augmented_data)
```

### CAPITAL ONE

```{r}
#| warning: false
#| label: fig-res-cap-hier
#| fig-cap: "Model residuals"
bank <-  "CAPITAL ONE"
plot_bank_residual(bank, augmented_data)
```

:::

```{r}
#| warning: false
#| label: tbl-lb-hier
#| tbl-cap: Ljungâ€“Box results where P-value < Significance Level of 0.05
augmented_data  |> 
  features(.fitted, ljung_box) |> mutate(across(where(is.numeric), \(x) round(x,4))) |> 
    filter(lb_pvalue <= 0.05)|> dplyr::select(BankName,lb_stat,lb_pvalue) |>
      rmarkdown::paged_table()
```


## Time Series Cross-Validation

```{r}
#| warning: false
#| output: false
#| eval: false
metrics <- augmented_data |> as_tibble() |> 
            mutate(RMSE = Metrics::rmse(UBPRE524.diff, .fitted),
                   MAE = Metrics::mae(UBPRE524.diff, .fitted)) |>
            group_by(BankName, BankType, .model) |> 
            summarise(RMSE = mean(RMSE,na.rm = TRUE),
                      MAE = mean(MAE,na.rm = TRUE)) |> add_column(.type = "Training")     

metrics |> dplyr::select(BankName, BankType, .model, .type, RMSE, MAE) |> 
    readr::write_csv("data/results/estimate_hier_metrics.csv")

```
```{r}
#| warning: false
#| output: false
#| eval: false
do_hier_cv <- function(estimation_data, init = 5) {      
    data <- estimation_data |> as_tibble() |>
        mutate(Quarter = factor(Quarter, levels = unique(Quarter)))
    
    data <- data |>
            arrange(Quarter) |>
            mutate(Quarter_Index = as.integer(factor(Quarter))) |> 
            relocate(Quarter_Index)
    
    cumulative_data <- map(unique(data$Quarter_Index), ~ {
        data |>
            filter(Quarter_Index < .x)
        })

    est_data_tr <- tibble(
                    Quarter_Index = unique(data$Quarter_Index),
                    data = cumulative_data
                   )

    step_data_tr <- data |> 
                      group_by(Quarter_Index) |> 
                      nest(new_data = -c(Quarter_Index))


    nested_data <- est_data_tr |> left_join(step_data_tr) |>
                        drop_na(new_data)
  
    results <- nested_data |> filter(Quarter_Index>init & Quarter_Index != max(Quarter_Index)) |>
                 mutate(model = map(data, ~ lmer(formula = formula(top_model), data = .x, REML = TRUE)),         
                        augmented_data = map2(model, new_data, ~ tryCatch({
                                            augment(.x, newdata = .y, allow.new.levels = TRUE)
                                            }, error = function(e) {
                                                message("Error in augment function: ", e$message)
                                                NULL 
                                            })))

    unnested_results <- results |> 
                            unnest(augmented_data) |> 
                            dplyr::select(BankName:last_col()) |> 
                            dplyr::group_by(BankName, BankType) |> 
                            mutate(RMSE = Metrics::rmse(UBPRE524.diff, .fitted),
                            MAE = Metrics::mae(UBPRE524.diff, .fitted)) |>
                            summarise(RMSE = mean(RMSE,na.rm = TRUE),
                                      MAE = mean(MAE,na.rm = TRUE)) |>
                            add_column(.type = "CV", .model = model_name)     

    unnested_results |> dplyr::select(BankName, BankType, .model, .type, RMSE, MAE) |> 
        readr::write_csv(glue("data/results/tscv/estimate_tscv_hier.csv"))
}
do_hier_cv(estimation_data, init = 13)

```

```{r}
#| warning: false
#| label: tbl-hier-cv
#| tbl-cap: Comparing Accuracy Metrics for Training and Cross-Validation data
#| tbl-subcap: 
#| - Accuracy Metrics on Training and Cross Validation data for sub-set of banks
#| - Mean Accuracy Metrics for our sub-set of banks
#| - Mean Accuracy Metrics across all banks
cv_results_est <- readr::read_csv("data/results/estimate_hier_metrics.csv",show_col_types = FALSE) |> mutate(across(where(is.numeric), \(x) round(x,4))) |> 
  dplyr::select(BankName, .type, RMSE, MAE)

cv_results_test <- read_tscv_results("hier") |> group_by(.type,BankName) |> 
  summarise(across(where(is.numeric), \(x) mean(x, na.rm = TRUE))) |> 
  mutate(across(where(is.numeric), \(x) round(x,4))) |> 
  dplyr::select(BankName, .type, RMSE, MAE) |> mutate(.type = "CV") 
  
comb <- bind_rows(cv_results_est, cv_results_test) 
comb |> filter(BankName %in% observation_data$BankName) |> arrange(BankName,.type) |> rmarkdown::paged_table()     

comb |> filter(BankName %in% observation_data$BankName) |> 
  group_by(.type) |> summarise(across(where(is.numeric), \(x) mean(x, na.rm = TRUE))) |>
    rmarkdown::paged_table()  

comb |> group_by(.type) |> 
  summarise(across(where(is.numeric), \(x) mean(x, na.rm = TRUE))) |> 
    rmarkdown::paged_table()     
```

## Prediction 

```{r}
#| warning: false
#| results: hide
#| fig-keep: all
#| label: fig-pred-observed-hier
#| fig-cap: "Prediction vs. Observed Event"
get_prediction <- function(bank, partner, all_data, model) {
  bank_data <- all_data |> filter(BankName == bank)
  event_data <- bank_data |> filter(!!as.name(partner) >=0) |> head(8) 
  fcast <- augment(model, newdata= event_data) |> as_tsibble(index = Quarter, key=c(BankName, BankType))

  original_scale(fcast, all_data, ".fitted") |> add_column(Partner = partner)
}

result <- map2(partner_banks$Bank, partner_banks$Partner, get_prediction, all_data, top_model)  |> 
  list_rbind() |> left_join(all_data |> dplyr::select(observed = UBPRE524.Value),by = join_by(BankName, BankType, Quarter) ) |> as_tibble() |> dplyr::select(Partner, BankName, Quarter, observed, predicted) 

map2(partner_banks$Bank, partner_banks$Partner, plot_prediction, result, all_data) 
```

```{r}
#| warning: false
#| label: tbl-abnormal-hier
#| tbl-cap: "Credit Card Plans-30-89 DAYS P/D %: Abnormal Returns (original scale)"
#| tbl-subcap: 
#| - "Costco (Old) - AMERICAN EXPRESS NATIONAL BANK (1394676)"
#| - "Costco (New) - CITIBANK, N.A. (476810)"
#| - "Walmart (Old) - SYNCHRONY BANK (1216022)"
#| - "Walmart (New) - CAPITAL ONE, NATIONAL ASSOCIATION (112837)"
#| - "GAP (Old) - SYNCHRONY BANK (1216022)"
#| - "GAP (New) - BARCLAYS BANK DELAWARE (2980209)"
print_ar(result, "Costco", "AMERICAN EXPRESS NATIONAL BANK (1394676)")
print_ar(result, "Costco", "CITIBANK, N.A. (476810)")
print_ar(result, "Walmart", "SYNCHRONY BANK (1216022)")
print_ar(result, "Walmart", "CAPITAL ONE, NATIONAL ASSOCIATION (112837)")
print_ar(result, "GAP", "SYNCHRONY BANK (1216022)")
print_ar(result, "GAP", "BARCLAYS BANK DELAWARE (2980209)")

```

## References